name: Step 2

on:
  issue_comment:
    types: [created, edited]

permissions:
  contents: read
  actions: write
  issues: write

env:
  STEP_3_FILE: ".github/steps/3-step.md"

jobs:
  check_keywords:
    name: Verificar palavras-chave no comentário da issue
    runs-on: ubuntu-latest
    steps:
      - name: Verificar por professortocat
        id: check_professortocat
        uses: skills/action-keyphrase-checker@v1
        with:
          text: ${{ github.event.comment.body }}
          keyphrase: "professortocat"
          case-sensitive: false
          minimum-occurrences: 1
      - name: Verificar por url do codespace
        id: check_alert
        uses: skills/action-keyphrase-checker@v1
        with:
          text: ${{ github.event.comment.body }}
          keyphrase: "github.dev"
          case-sensitive: false
          minimum-occurrences: 1
  find_exercise:
    name: Encontrar issue do exercício
    uses: dev-pods/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.1.1
  check_step_work:
    name: Verificar trabalho da etapa
    runs-on: ubuntu-latest
    needs: [check_keywords, find_exercise]
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}
    steps:
      - name: Fazer checkout do código
        uses: actions/checkout@v4
      - name: Obter templates de resposta
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.7.0
      # INÍCIO: Verificação prática
      - name: Verificar se o codespace está rodando
        id: check-codespace-running
        continue-on-error: true
        run: |
          # Obter a url do codespace do corpo do comentário
          url_regex="https://[a-z0-9-]*.app.github.dev"
          codespace_url=$(echo $ISSUE_COMMENT_BODY | grep -oP "$url_regex" | head -n 1)
          # Testar o serviço web para obter o status
          echo "Verificando se o codespace está rodando em: $codespace_url"
          resp_code=$(curl -s -o /dev/null -w "%{http_code}" $codespace_url)
          # Se não estiver rodando, sair
          if [ "$resp_code" -eq 200 ]; then
            echo "Codespace confirmado em execução"
          else
            echo "Codespace não está rodando. Código de resposta: $resp_code"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_COMMENT_BODY: ${{ github.event.comment.body }}
      # FIM: Verificação prática
      - name: Criar comentário - resultados da etapa
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          vars: |
            step_number: 2
            results_table:
              - description: "Codespace está rodando"
                passed: ${{ steps.check-codespace-running.outcome == 'success' }}
      - name: Falhar job se nem todos os testes passaram
        if: contains(steps.*.outcome, 'failure')
        run: exit 1
  post_next_step_content:
    name: Publicar conteúdo do próximo passo
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}
    steps:
      - name: Fazer checkout do código
        uses: actions/checkout@v4
      - name: Obter templates de resposta
        uses: actions/checkout@v4
        with:
          repository: dev-pods/exercise-toolkit
          path: exercise-toolkit
          ref: v0.1.1
      - name: Criar comentário - etapa finalizada
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          vars: |
            next_step_number: 3
      - name: Criar comentário - adicionar conteúdo da etapa
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: ${{ env.STEP_3_FILE }}
          vars: |
            login: ${{ github.actor }}
      - name: Criar comentário - acompanhando progresso
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: exercise-toolkit/markdown-templates/step-feedback/watching-for-progress.md
      - name: Desabilitar workflow atual e habilitar o próximo
        run: |
          gh workflow disable "${{github.workflow}}"
          gh workflow enable "Step 3"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
